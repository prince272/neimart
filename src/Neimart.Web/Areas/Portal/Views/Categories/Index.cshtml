@model CategoryListModel
@{
    Html.AddTitle("Categories");

    var seller = await Context.GetMemberAsync();
}

@section Styles {
    @(await Html.PartialAsync("Libraries/_TableStyles"))
}

@section Scripts {
    @(await Html.PartialAsync("Libraries/_TableScripts"))
}

<div class="row">
    <div class="col-12">
        <div class="d-flex flex-wrap align-items-center justify-content-between">
            <div class="pb-3">
                <h1 class="h3 mb-0 pr-3">Categories (@(Model.TotalItems))</h1>
            </div>
            <div class="pb-3">
                <div class="d-flex flex-wrap">
                    <a class="btn btn-primary" asp-action="Add" asp-controller="Categories" asp-area="Portal">Add Category</a>
                </div>
            </div>
        </div>
    </div>
    @if (Model.TotalItems > 0 || Model.HasRequestValues())
    {
        <div class="col-12">
            <div class="card">
                <div class="card-header p-0">
                    <div class="d-flex flex-wrap align-items-center pt-3 pl-3">
                        <div class="ml-auto"></div>
                        <div class="pb-3 pr-3" visible="@(Model.HasRequestValues())">
                            <button class="btn btn-default"
                                    type="button"
                                    data-submit="click"
                                    data-action="@Url.Action("Index", "Categories", new { area = "Portal" })"
                                    data-method="get">
                                <span>Clear Filters</span>
                            </button>
                        </div>
                        <div class="pb-3 pr-3 w-100 w-md-auto">
                            <form asp-action="Index" asp-controller="Categories" asp-area="Portal" method="get">
                                <div class="input-group">
                                    <input name="search" type="text" asp-for="Filter.Search" autocomplete="off" class="form-control ignore-focus" />
                                    <span class="input-group-append">
                                        <button class="icon-btn btn btn-default" type="submit" data-toggle="tooltip" title="Search">
                                            <i class="fal fa-search"></i>
                                        </button>
                                    </span>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <table class="card-table table table-hover" style="margin: 0 !important;" data-toggle="datatable" data-checkbox-target=".category-checkbox-target">
                    <thead class="thead-light">
                        <tr>
                            <th style="border-bottom: none;">Icon</th>
                            <th style="border-bottom: none;">Category</th>
                            <th style="border-bottom: none;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var categoryModel in Model.Items)
                        {
                            <tr id="category-id-@(categoryModel.Category.Id)"
                                data-submit="click"
                                data-action="@(Url.Action("Edit", "Categories", new { area = "Portal", id = categoryModel.Category.Id }))"
                                data-method="get"
                                data-value="@(categoryModel.Category.Id)"
                                data-ignore-closest="td"
                                data-ignore-target=":input">
                                <td>
                                    <div class="d-flex justify-content-center align-items-center w-50px h-50px p-1 border theme-bg-white rounded">
                                        <i class="fad fa-@(categoryModel.Category.Icon) fa-2x text-primary"></i>
                                    </div>
                                </td>
                                <td>
                                    <div class="h-50px d-flex flex-column justify-content-center">
                                        <div>@(categoryModel.Category.Name)</div>
                                        <div>
                                            <span class="badge badge-primary" visible="@(categoryModel.Category.Published)">Published</span>
                                            <span class="badge badge-dark" visible="@(!categoryModel.Category.Published)">Unpublished</span>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="dropdown">
                                        <button type="button" class="btn btn-default rounded-pill icon-btn borderless" data-toggle="dropdown"><i class="far fa-ellipsis-h"></i></button>
                                        <div class="dropdown-menu dropdown-menu-right">
                                            <button type="button" class="dropdown-item"
                                                    data-submit="click"
                                                    data-action="@(Url.Action("Edit", "Categories", new { area = "Portal", id = categoryModel.Category.Id }))"
                                                    data-method="get">Edit</button>
                                            <button type="button" class="dropdown-item"
                                                    data-submit="click"
                                                    data-action="@(Url.Action("Delete", "Categories", new { area = "Portal", id = categoryModel.Category.Id }))"
                                                    data-method="post"
                                                    data-title="Delete Category"
                                                    data-message="Are you sure you want to delete @(categoryModel.Category.Name) category?"
                                                    data-dialog="confirm"
                                                    data-confirm-label="Delete"
                                                    data-confirm-class-name="btn-danger">Delete</button>
                                            <button type="button" class="dropdown-item"
                                                    data-submit="click"
                                                    data-action="@(Url.Action("Publish", "Categories", new { area = "Portal",  id = categoryModel.Category.Id, toggle = !categoryModel.Category.Published }))"
                                                    data-method="post">@(categoryModel.Category.Published ? "Unpublish" : "Publish")</button>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="card-footer pt-3 pb-0">
                    <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-md-between">
                        <div class="pb-3 pr-3 d-none d-md-block">
                            Showing @(Model.PageFrom)-@(Model.PageTo) out of @("category".ToQuantity(Model.TotalItems))
                        </div>

                        <div class="pb-3">
                            <ul style="margin-bottom: 0px"
                                data-toggle="paginator"
                                data-page="@Model.Page"
                                data-total-pages="@Model.TotalPages"
                                data-submit="pageClick"
                                data-action="@Url.Action("Index", "Categories", new { area = "Portal" })"
                                data-method="get"
                                data-name="page"
                                data-object="@(Model.GetRequestValues().ToJsonString())">
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="col-12">
            <div class="d-flex align-items-center justify-content-center">
                <div class="py-5 my-3 text-center">
                    <div class="d-inline-block mb-4"><i class="fad fa-th fa-5x text-primary"></i></div>
                    <h4 class="h3">Add Your First Category</h4>
                    <p class="text-muted">Once you start adding your categories, you'll see them here.</p>
                    <div class="d-inline-block"><a class="btn btn-primary" asp-action="Add" asp-controller="Categories" asp-area="Portal">Add Category</a></div>
                </div>
            </div>
        </div>
    }

</div>

