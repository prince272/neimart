@model PlanSelectModel
@{ 
    var contentId = Guid.NewGuid().ToString();
}
<form asp-antiforgery="true" class="modal modal-fullscreen">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content" id="@(contentId)" data-valid="@(ViewData.ModelState.IsValid.ToString().ToLowerInvariant())" data-redirect="@(ViewData["Redirect"])">
            <div class="modal-header">
                <div class="modal-title">
                    <h5 class="h5 mb-0">Select Plan</h5>
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body pb-3" style="overflow-y: inherit;">
                <div asp-validation-summary="All" class="alert callout-danger mb-4" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="form-group">
                    <label class="form-label" asp-for="PlanType"></label>
                    <div>
                        <div class="btn-group btn-group-toggle flex-wrap w-100" data-toggle="buttons">
                            @foreach (var planTypeOption in Model.PlanTypeOptions)
                            {
                                <label class="btn btn-default @(planTypeOption.Selected ? "active" : "")">
                                    <input type="radio" name="@(Html.NameFor(x => x.PlanType))" value="@(planTypeOption.Value)" @(planTypeOption.Selected ? "checked" : "") />
                                    <span>@(planTypeOption.Text)</span>
                                </label>
                            }
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="form-label" asp-for="PlanPeriod"></label>
                    <div>
                        <div class="btn-group btn-group-toggle flex-wrap w-100" data-toggle="buttons">
                            @foreach (var planPeriodOption in Model.PlanPeriodOptions)
                            {
                                <label class="btn btn-default @(planPeriodOption.Selected ? "active" : "")">
                                    <input type="radio" name="@(Html.NameFor(x => x.PlanPeriod))" value="@(planPeriodOption.Value)" @(planPeriodOption.Selected ? "checked" : "") />
                                    <span>@(planPeriodOption.Text)</span>
                                </label>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div>
                <div class="row no-gutters row-bordered">
                    <div class="col-12"></div>
                    <div class="col-6">
                        <div class="text-center m-2">
                            <div class="h5 mb-2 text-muted">Monthly Rate</div>
                            <div class="mb-0">@(AppSettings.Value.CurrencyCode) <span class="display-3" data-update="planRate">0</span></div>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="text-center m-2">
                            <div class="h5 mb-2 text-muted">Total</div>
                            <div class="mb-0 text-primary">@(AppSettings.Value.CurrencyCode) <span class="display-3" data-update="planAmount">0</span></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" data-submit="modal">Proceed</button>
            </div>
            <script>
                (function () {
                    var planTypes = @(Html.Raw(EnumHelper.GetEnumValues<PlanType>()
                                                         .Select(name => new { name, value = name.GetNumericValue() })
                                                         .ToDictionary(pair => pair.name, pair => pair.value).ToJsonString()));

                    var planPeriods = @(Html.Raw(EnumHelper.GetEnumValues<PlanPeriod>()
                                                         .Select(name => new { name, value = name.GetNumericValue() })
                                                         .ToDictionary(pair => pair.name, pair => pair.value).ToJsonString()));

                    var planRates = @(Html.Raw(AppSettings.Value.PlanRates.Select((value, index) => new { value, index })
                                                                           .ToDictionary(pair => pair.index, pair => pair.value).ToJsonString()));
                    var contentElement = $('#@(contentId)');
                    var planTypeInputs = $('input[name="@(Html.NameFor(x => x.PlanType))"]', contentElement);
                    var planPeriodInputs = $('input[name="@(Html.NameFor(x => x.PlanPeriod))"]', contentElement);

                    function updateView() {
                        var planTypeInput = $(planTypeInputs.filter(function () { return $(this).prop('checked'); })[0]);
                        var planPeriodInput = $(planPeriodInputs.filter(function () { return $(this).prop('checked'); })[0]);

                        if (planTypeInput.val() != null && planTypeInput.val() != '' &&
                            planPeriodInput.val() != null && planPeriodInput.val() != '') {
                            var planRate = planTypeInput.val() ? planRates[planTypes[planTypeInput.val()]] : 0;
                            var planPeriod = planPeriodInput.val() ? planPeriods[planPeriodInput.val()] : 0;
                            var planAmount = planRate * planPeriod;

                            $('[data-update="planRate"]', contentElement).html(planRate);
                            $('[data-update="planAmount"]', contentElement).html(planAmount);
                        }
                    }

                    updateView();
                    planTypeInputs.on('change', updateView);
                    planPeriodInputs.on('change', updateView);
                })();

                // # sourceURL=select-plan.js
            </script>
        </div>
    </div>
</form>